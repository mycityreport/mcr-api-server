name: Build Docker image

on:
  push:
    branches:
      - '*/*'
      - develop
      - staging
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Use build caches
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ github.ref }}-buildx-${{ github.sha }}
          restore-keys: |
            - ${{ github.ref }}-buildx-
      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        id: extract_branch
      - name: Make docker image tags
        env:
          BRANCH_NAME: ${{ steps.extract_branch.outputs.branch }}
          SHA: ${{ github.sha }}
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/mcr-api-server
          BRANCH=$(echo ${BRANCH_NAME} | sed "s#/#-#g" | sed "s#_#-#g")
          BUILT_DATE=$(TZ=UTC-9 date '+%Y%m%d')
          SHORT_HASH=${SHA:0:7}
          FULL_TAG=${IMAGE}:${BRANCH}-${BUILT_DATE}-${SHORT_HASH}
          SHORT_TAG=${IMAGE}:${BRANCH}
          echo "TAGS=${FULL_TAG},${SHORT_TAG}" >> ${GITHUB_ENV}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            GRADLE_OPTS="-Djdk.lang.Process.launchMechanism=vfork"
          tags: ${{ env.TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
